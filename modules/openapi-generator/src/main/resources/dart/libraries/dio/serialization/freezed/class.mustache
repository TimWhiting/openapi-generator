//ignore_for_file: invalid_annotation_target
import 'package:freezed_annotation/freezed_annotation.dart';

part '{{classFilename}}.g.dart';
part '{{classFilename}}.freezed.dart';

/// {{{description}}}{{^description}}{{classname}}{{/description}}
{{#hasVars}}
///
/// Properties:
{{#allVars}}
/// * [{{{name}}}] {{#description}}- {{{.}}}{{/description}}
{{/allVars}}
{{/hasVars}}

@freezed
class {{classname}} with _${{classname}} {
    const {{classname}}._();

    const factory {{classname}}({
        {{#vars}}
            {{#description}}
            /// {{{.}}}
            {{/description}}
            @JsonKey(name: r'{{baseName}}') {{>serialization/freezed/variable_type}} {{name}},
        {{/vars}}
    }) = _{{classname}};

    factory {{classname}}.fromJson(Map<String, dynamic> json) => _${{classname}}FromJson(json);
}

{{!
    Generate an enum for any variables that are declared as inline enums
    isEnum is only true for inline variables that are enums.
    If an enum is declared as a definition, isEnum is false and the enum is generated from the
    enum.mustache template.
}}
{{#vars}}
    {{#isEnum}}
        {{^isContainer}}

{{>serialization/freezed/enum_inline}}
        {{/isContainer}}
        {{#isContainer}}
            {{#mostInnerItems}}

{{>serialization/freezed/enum_inline}}
            {{/mostInnerItems}}
        {{/isContainer}}
    {{/isEnum}}
{{/vars}}